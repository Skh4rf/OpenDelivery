#pragma checksum "S:\Schule\3chel\FSST\_project\OpenDelivery\src\OpenDelivery\MapPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "72C249B98430AFEAD53BB27FFC66C2F5384AC1ACE8CC87BA4B7DD848BC47ED3F"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenDelivery
{
    partial class MapPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Maps_MapControl_ZoomLevel(global::Windows.UI.Xaml.Controls.Maps.MapControl obj, global::System.Double value)
            {
                obj.ZoomLevel = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MapPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMapPage_Bindings
        {
            private global::OpenDelivery.MapPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Maps.MapControl obj2;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2ZoomLevelDisabled = false;

            private MapPage_obj1_BindingsTracking bindingsTracking;

            public MapPage_obj1_Bindings()
            {
                this.bindingsTracking = new MapPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 15 && columnNumber == 13)
                {
                    isobj2ZoomLevelDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // MapPage.xaml line 13
                        this.obj2 = (global::Windows.UI.Xaml.Controls.Maps.MapControl)target;
                        this.bindingsTracking.RegisterTwoWayListener_2(this.obj2);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMapPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::OpenDelivery.MapPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::OpenDelivery.MapPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ZoomLevel(obj.ZoomLevel, phase);
                    }
                }
            }
            private void Update_ZoomLevel(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MapPage.xaml line 13
                    if (!isobj2ZoomLevelDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Maps_MapControl_ZoomLevel(this.obj2, obj);
                    }
                }
            }
            private void UpdateTwoWay_2_ZoomLevel()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.ZoomLevel = this.obj2.ZoomLevel;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MapPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<MapPage_obj1_Bindings> weakRefToBindingObj; 

                public MapPage_obj1_BindingsTracking(MapPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MapPage_obj1_Bindings>(obj);
                }

                public MapPage_obj1_Bindings TryGetBindingObject()
                {
                    MapPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

                public void RegisterTwoWayListener_2(global::Windows.UI.Xaml.Controls.Maps.MapControl sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Maps.MapControl.ZoomLevelProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_ZoomLevel();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // MapPage.xaml line 13
                {
                    this.mapControl = (global::Windows.UI.Xaml.Controls.Maps.MapControl)(target);
                }
                break;
            case 3: // MapPage.xaml line 19
                {
                    this.GridCustomerInfo = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 4: // MapPage.xaml line 45
                {
                    this.GridConfirm = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5: // MapPage.xaml line 46
                {
                    this.RectangleConfirm = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 6: // MapPage.xaml line 47
                {
                    this.StackpanelConfirm = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.StackpanelConfirm).SizeChanged += this.StackpanelConfirm_SizeChanged;
                }
                break;
            case 7: // MapPage.xaml line 49
                {
                    this.StackPanelConfirmProducts = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 8: // MapPage.xaml line 55
                {
                    this.ButtonConfirm = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ButtonConfirm).Click += this.ButtonConfirm_Click;
                }
                break;
            case 9: // MapPage.xaml line 50
                {
                    this.TextBoxConfirmQuantity = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 10: // MapPage.xaml line 51
                {
                    this.TextBlockConfirmUnit = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 11: // MapPage.xaml line 52
                {
                    this.ComboBoxConfirmItem = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)this.ComboBoxConfirmItem).SelectionChanged += this.ComboBoxConfirmItem_SelectionChanged;
                }
                break;
            case 12: // MapPage.xaml line 53
                {
                    this.ButtonSaveConfirmChang = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ButtonSaveConfirmChang).Click += this.ButtonSaveConfirmChang_Click;
                }
                break;
            case 13: // MapPage.xaml line 21
                {
                    this.GridCustomerInfo1 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 14: // MapPage.xaml line 31
                {
                    this.GridCustomerInfo2 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 15: // MapPage.xaml line 41
                {
                    this.ButtonNextCustomer = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ButtonNextCustomer).Click += this.ButtonNextCustomer_Click;
                }
                break;
            case 16: // MapPage.xaml line 38
                {
                    this.TextBlockCustomerInfo2_Products = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 17: // MapPage.xaml line 35
                {
                    this.TextBlockCustomerInfo2_Name = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 18: // MapPage.xaml line 36
                {
                    this.TextBlockCustomerInfo2_Adresse = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 19: // MapPage.xaml line 28
                {
                    this.TextBlockCustomerInfo1_Products = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 20: // MapPage.xaml line 25
                {
                    this.TextBlockCustomerInfo1_Name = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 21: // MapPage.xaml line 26
                {
                    this.TextBlockCustomerInfo1_Adresse = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MapPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MapPage_obj1_Bindings bindings = new MapPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

